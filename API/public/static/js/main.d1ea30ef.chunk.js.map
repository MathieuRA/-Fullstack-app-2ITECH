{"version":3,"sources":["component/home.jsx","utils/editModal.jsx","utils/notification.jsx","component/users/user.jsx","component/projects/project.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Home","EditModal","props","componentDidMount","setState","prevState","user","contents","componentDidUpdate","isEqual","state","toogleEditing","isEditing","_editField","e","key","firstname","target","value","id","this","handleEdit","hasEditedUser","i","onDoubleClick","map","content","Object","keys","onChange","onClick","React","Component","FormField","placeholder","Notification","children","$class","className","AddUser","setError","setSuccess","useRef","job","lastname","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","_handleSubmit","current","onSubmit","name","ref","type","AllUsers","users","isEmpty","_deleteUser","_id","aria-label","aria-hidden","_editUser","refresh","error","success","userId","status","callback","closeEditModal","response","json","_getUsers","User","_setRoute","route","usersLoaded","AddProject","title","date","dev","thumbnail","useState","techno","setTechno","options","label","AllProject","projects","project","ShowProject","setUser","_getUser","developper_id","_deleteProject","techo","projectId","_createProject","Date","getTime","devId","timestamp","_formateForAPI","created_date","_getProjects","Project","asEditedPOroject","setRoute","loaded","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1ea30ef.chunk.js","sourcesContent":["export const Home = () => (\n  <div>\n    <h1>Page d'accueil</h1>\n  </div>\n)\n","import React from 'react'\n\nimport { map, isEqual } from 'lodash'\n\nexport default class EditModal extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isEditing: false,\n      user: {\n        id: this.props.id,\n      },\n    }\n  }\n\n  componentDidMount = () => {\n    this.setState((prevState) => ({\n      user: {\n        ...this.props.contents,\n        ...prevState.user,\n      },\n    }))\n  }\n\n  componentDidUpdate = (prevState) => {\n    if (isEqual(prevState, this.state)) {\n      return\n    }\n  }\n  toogleEditing = () => {\n    this.setState((prevState) => ({\n      isEditing: !prevState.isEditing,\n    }))\n  }\n\n  _editField = (e, key) => {\n    switch (key) {\n      case 'firstname':\n        this.setState((prevState) => ({\n          user: {\n            ...prevState.user,\n            firstname: e.target.value,\n          },\n        }))\n        break\n      case 'lastname':\n        this.setState((prevState) => ({\n          user: {\n            ...prevState.user,\n            firstname: e.target.value,\n          },\n        }))\n        break\n      case 'job':\n        this.setState((prevState) => ({\n          user: {\n            ...prevState.user,\n            firstname: e.target.value,\n          },\n        }))\n        break\n    }\n  }\n\n  render() {\n    const {\n      contents,\n      handleEdit,\n      hasEditedUser,\n    } = this.props\n\n    let i = 0\n\n    return (\n      <div onDoubleClick={this.toogleEditing}>\n        {map(contents, (content) => {\n          const key = Object.keys(contents)[i]\n          if (\n            // hide useless change without delete them of the object\n            key === '__v' ||\n            key === '_id'\n          ) {\n            i++\n            return\n          }\n          i++\n\n          return (\n            <>\n              <FormField\n                key={i}\n                content={content}\n                isEditing={this.state.isEditing}\n                onChange={(e) => this._editField(e, key)}\n              />\n            </>\n          )\n        })}\n        <small>\n          Doublie clique pour{' '}\n          {this.state.isEditing ? (\n            <span>annuler</span>\n          ) : (\n            <span>modifier</span>\n          )}\n        </small>\n        {this.state.isEditing && (\n          <button\n            onClick={() =>\n              handleEdit(\n                this.state,\n                hasEditedUser,\n                this.toogleEditing\n              )\n            }>\n            Modifier\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\nconst FormField = ({ content, isEditing, onChange }) => {\n  return isEditing ? (\n    <input placeholder={content} onChange={onChange} />\n  ) : (\n    <p>{content}</p>\n  )\n}\n","export default Notification = ({ children, $class }) => {\n  return <p className={'alert ' + $class}>{children}</p>\n}\n","import React from 'react'\n\nimport { map, isEmpty } from 'lodash'\nimport { useRef } from 'react'\n\nimport EditModal from '../../utils/editModal'\nimport Notification from '../../utils/notification'\n\nimport './user.css'\n\nconst AddUser = ({ setError, setSuccess }) => {\n  const firstname = useRef()\n  const job = useRef()\n  const lastname = useRef()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await fetch('http://localhost:3000/user', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(\n          _handleSubmit(firstname, job, lastname)\n        ),\n      })\n\n      firstname.current.value = ''\n      job.current.value = ''\n      lastname.current.value = ''\n      setSuccess('Utilisateur à bien été ajouter')\n    } catch (err) {\n      setError(\"L'ajout de l'utilisateur à échouer \")\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Nom:\n            <input\n              id='firstname'\n              name='firstname'\n              ref={firstname}\n              type='text'\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Prénom:\n            <input\n              id='lastname'\n              name='lastname'\n              ref={lastname}\n              type='text'\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Métier:\n            <input\n              id='job'\n              name='job'\n              ref={job}\n              type='text'\n            />\n          </label>\n        </div>\n        <input type='submit' value='Envoyer' />\n      </form>\n    </div>\n  )\n}\n\nconst AllUsers = ({\n  hasEditedUser,\n  setError,\n  setSuccess,\n  users,\n}) =>\n  isEmpty(users) ? (\n    <p>Aucun utilisateur</p>\n  ) : (\n    map(users, (user) => (\n      <div key={user._id}>\n        <button\n          onClick={() =>\n            _deleteUser(\n              hasEditedUser,\n              setError,\n              setSuccess,\n              user._id\n            )\n          }\n          aria-label='Close'\n          className='close'\n          type='button'\n        >\n          <span aria-hidden='true'>&times;</span>\n        </button>\n        <EditModal\n          contents={user}\n          handleEdit={_editUser}\n          hasEditedUser={hasEditedUser}\n          id={user._id}\n        />\n      </div>\n    ))\n  )\n\nconst _deleteUser = async (\n  refresh,\n  error,\n  success,\n  userId\n) => {\n  const response = await fetch(\n    `http://localhost:3000/user/${userId}`,\n    {\n      method: 'DELETE',\n    }\n  )\n  if (response.status === 200) {\n    success('Utilisateur supprimer')\n    refresh()\n  } else {\n    error('Erreur lors de la suppression')\n    refresh()\n  }\n}\n\nconst _editUser = async (\n  { user },\n  callback,\n  closeEditModal\n) => {\n  const response = await fetch(\n    `http://localhost:3000/user/${user.id}`,\n    {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(user),\n    }\n  )\n  await response.json()\n  closeEditModal()\n  callback()\n}\nconst _getUsers = async () => {\n  const response = await fetch(\n    'http://localhost:3000/users'\n  )\n  const users = await response.json()\n  return users\n}\n\nconst _handleSubmit = (firstname, job, lastname) => {\n  return {\n    firstname: firstname.current.value,\n    job: job.current.value,\n    lastname: lastname.current.value,\n  }\n}\n\nexport class User extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: '',\n      route: 'get',\n      success: '',\n      usersLoaded: false,\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ users: await _getUsers() }, () => {\n      this.setState({ usersLoaded: true })\n    })\n  }\n\n  componentDidUpdate() {\n    this.hasEditedUser()\n  }\n\n  hasEditedUser = async () => {\n    this.setState({ users: await _getUsers() })\n  }\n\n  setError = (error) => this.setState({ error })\n\n  setSuccess = (success) => this.setState({ success })\n\n  _setRoute = (route) => this.setState({ route })\n\n  render() {\n    const {\n      error,\n      success,\n      route,\n      usersLoaded,\n      users,\n    } = this.state\n    return (\n      <>\n        {error && (\n          <Notification $class={'alert-danger'}>\n            {error}\n          </Notification>\n        )}\n        {success && (\n          <Notification $class={'alert-success'}>\n            {success}\n          </Notification>\n        )}\n        <button>\n          {route === 'get' ? (\n            <span onClick={() => this._setRoute('post')}>\n              Ajouter un utilisateur\n            </span>\n          ) : (\n            <span onClick={() => this._setRoute('get')}>\n              Tout les utilisateurs\n            </span>\n          )}\n        </button>\n        {route === 'get' && (\n          <div>\n            {!usersLoaded ? (\n              <p>Chargement des utilisateurs ...</p>\n            ) : (\n              <AllUsers\n                hasEditedUser={this.hasEditedUser}\n                setError={this.setError}\n                setSuccess={this.setSuccess}\n                users={users}\n              />\n            )}\n          </div>\n        )}\n        {route === 'post' && (\n          <AddUser\n            setError={this.setError}\n            setSuccess={this.setSuccess}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import React, { useRef, useState } from 'react'\n\nimport MultiSelect from 'react-multi-select-component'\n\nimport { map, isEmpty } from 'lodash'\n\nimport Notification from '../../utils/notification'\n\nconst AddProject = ({ users, error, success, refresh }) => {\n  const options = [\n    { value: 'css', label: 'CSS' },\n    { value: 'html', label: 'HTML' },\n    { value: 'javascript', label: 'Javascript' },\n    { value: 'node', label: 'Node.js' },\n    { value: 'php', label: 'PHP' },\n    { value: 'react', label: 'React.js' },\n    { value: 'symphony', label: 'Symphony' },\n    { value: 'typscript', label: 'Typescript' },\n    { value: 'wordpress', label: 'Wordpress' },\n  ]\n\n  const title = useRef()\n  const date = useRef()\n  const dev = useRef()\n  const thumbnail = useRef()\n\n  const [techno, setTechno] = useState()\n\n  return (\n    <>\n      <form\n        onSubmit={(e) =>\n          _handleSubmit(\n            e,\n            title.current.value,\n            techno,\n            dev.current.value,\n            date.current.value,\n            thumbnail.current.value,\n            error,\n            success,\n            refresh\n          )\n        }\n      >\n        <div>\n          <label>\n            Titre:\n            <input\n              id='title'\n              name='title'\n              ref={title}\n              type='text'\n            />\n          </label>\n          <label>\n            Techno:\n            <MultiSelect\n              options={options}\n              onChange={setTechno}\n              value={techno}\n            />\n          </label>\n          <label>\n            Le développeur\n            <select ref={dev}>\n              {map(users, (user) => {\n                return (\n                  <option key={user._id} value={user._id}>\n                    {user.firstname}\n                  </option>\n                )\n              })}\n            </select>\n          </label>\n          <label>\n            <input\n              type='date'\n              name='created_date'\n              id='created_date'\n              ref={date}\n            />\n          </label>\n          <label>\n            Image\n            <input\n              type='text'\n              name='thumbnail'\n              id='thumbnail'\n              ref={thumbnail}\n            />\n          </label>\n        </div>\n        <button type='submit'>Envoyer</button>\n      </form>\n    </>\n  )\n}\n\nconst AllProject = ({\n  projects,\n  error,\n  success,\n  refresh,\n}) =>\n  !isEmpty(projects) ? (\n    map(projects, (project) => (\n      <ShowProject\n        key={project._id}\n        project={project}\n        error={error}\n        success={success}\n        refresh={refresh}\n      />\n    ))\n  ) : (\n    <p>Aucun projet</p>\n  )\n\nconst ShowProject = ({\n  project,\n  error,\n  success,\n  refresh,\n}) => {\n  const [user, setUser] = useState()\n  _getUser(project.developper_id, setUser)\n  return (\n    <>\n      <div>\n        <button\n          onClick={() =>\n            _deleteProject(\n              project._id,\n              success,\n              error,\n              refresh\n            )\n          }\n          aria-label='Close'\n          className='close'\n          type='button'\n        >\n          <span aria-hidden='true'>&times;</span>\n        </button>\n        <h2>{project.title}</h2>\n        {user && (\n          <div>\n            <p>Développeur</p>\n            <p>{user}</p>\n          </div>\n        )}\n        <ul>\n          {map(project.techno, (techo) => (\n            <li key={techo.value}>{techo.label}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nconst _deleteProject = async (\n  projectId,\n  success,\n  error,\n  refresh\n) => {\n  const response = await fetch(\n    `http://localhost:3000/project/${projectId}`,\n    {\n      method: 'DELETE',\n    }\n  )\n  if (response.status === 200) {\n    success('Suppression effectuer')\n    refresh()\n  } else {\n    error('Erreur lors de la suppresion')\n    refresh()\n  }\n}\n\nconst _handleSubmit = (\n  e,\n  title,\n  techno,\n  dev,\n  date,\n  thumbnail,\n  error,\n  success,\n  refresh\n) => {\n  e.preventDefault()\n  _createProject(\n    title,\n    techno,\n    dev,\n    new Date(date).getTime(),\n    thumbnail,\n    error,\n    success,\n    refresh\n  )\n}\n\nconst _createProject = async (\n  title,\n  techno,\n  devId,\n  timestamp,\n  thumbnail,\n  error,\n  success,\n  refresh\n) => {\n  const response = await fetch(\n    'http://localhost:3000/project',\n    {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(\n        _formateForAPI(\n          title,\n          techno,\n          devId,\n          timestamp,\n          thumbnail\n        )\n      ),\n    }\n  )\n  if (response.status === 201) {\n    success('Projet ajouter avec success')\n    refresh()\n  } else {\n    error(\"Erreur lors de l'ajoute du projet\")\n    refresh()\n  }\n}\n\nconst _formateForAPI = (\n  title,\n  techno,\n  devId,\n  timestamp,\n  thumbnail\n) => {\n  return {\n    title,\n    techno,\n    developper_id: devId,\n    thumbnail,\n    created_date: timestamp,\n  }\n}\n\nconst _getUsers = async () => {\n  const response = await fetch(\n    'http://localhost:3000/users'\n  )\n  const users = await response.json()\n  return users\n}\n\nconst _getUser = async (userId, callback) => {\n  const response = await fetch(\n    `http://localhost:3000/user/${userId}`\n  )\n  const user = await response.json()\n  callback(user.firstname)\n  return user.firstname\n}\n\nconst _getProjects = async () => {\n  const response = await fetch(\n    'http://localhost:3000/projects'\n  )\n\n  const projects = await response.json()\n  return projects\n}\n\nexport default class Project extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: '',\n      loaded: false,\n      route: 'get',\n      success: '',\n    }\n  }\n\n  async componentDidMount() {\n    this.setState(\n      {\n        users: await _getUsers(),\n        projects: await _getProjects(),\n      },\n      () => this.setState({ loaded: true })\n    )\n  }\n\n  asEditedPOroject = async () =>\n    this.setState({ projects: await _getProjects() })\n\n  setRoute = (route) => this.setState({ route })\n\n  setError = (error) => this.setState({ error })\n\n  setSuccess = (success) => this.setState({ success })\n\n  render() {\n    const {\n      route,\n      users,\n      error,\n      success,\n      loaded,\n      projects,\n    } = this.state\n\n    return (\n      <>\n        {error && (\n          <Notification $class={'alert-error'}>\n            {error}\n          </Notification>\n        )}\n        {success && (\n          <Notification $class={'alert-success'}>\n            {success}\n          </Notification>\n        )}\n        <button>\n          {route === 'get' ? (\n            <span onClick={() => this.setRoute('post')}>\n              Ajouter un projet\n            </span>\n          ) : (\n            <span onClick={() => this.setRoute('get')}>\n              Voir tout les projets\n            </span>\n          )}\n        </button>\n        {route === 'get' &&\n          (loaded ? (\n            <AllProject\n              projects={projects}\n              error={this.setError}\n              success={this.setSuccess}\n              refresh={this.asEditedPOroject}\n            />\n          ) : (\n            <p>Chargement ...</p>\n          ))}\n\n        {route === 'post' && (\n          <AddProject\n            users={users}\n            error={this.setError}\n            success={this.setSuccess}\n            refresh={this.asEditedPOroject}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import './App.css'\nimport { Home } from './component/home'\nimport { useState } from 'react'\nimport { User } from './component/users/user'\nimport Project from './component/projects/project'\n\nfunction App() {\n  const [route, setRoute] = useState('projects')\n  return (\n    <>\n      <div>\n        <nav>\n          <ul className='nav'>\n            <li\n              onClick={() => setRoute('home')}\n              className='nav-item btn btn-primary'>\n              Accueil\n            </li>\n            <li\n              onClick={() => setRoute('users')}\n              className='nav-item btn btn-success'>\n              Utilisateurs\n            </li>\n            <li\n              onClick={() => setRoute('projects')}\n              className='nav-item btn btn-secondary'>\n              Projets\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <div>\n        <section>\n          {route === 'home' && <Home />}\n          {route === 'users' && <User />}\n          {route === 'projects' && <Project />}\n        </section>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}