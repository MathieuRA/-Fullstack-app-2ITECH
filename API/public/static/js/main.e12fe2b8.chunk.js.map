{"version":3,"sources":["component/home.jsx","utils/editModal.jsx","utils/notification.jsx","component/users/user.jsx","utils/tools.jsx","component/projects/project.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["Home","className","role","href","target","EditModal","props","componentDidMount","setState","prevState","user","contents","componentDidUpdate","isEqual","state","toogleEditing","isEditing","_editField","e","key","firstname","value","id","this","handleEdit","hasEditedUser","i","reformateContent","lastname","job","onDoubleClick","map","content","Object","keys","onChange","label","onClick","React","Component","FormField","$class","placeholder","Notification","children","AddUser","setError","setSuccess","useRef","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","_handleSubmit","current","onSubmit","name","ref","type","AllUsers","users","isEmpty","_deleteUser","_id","aria-label","aria-hidden","_editUser","refresh","error","success","userId","status","callback","closeEditModal","response","json","_getUsers","User","_setRoute","route","console","log","usersLoaded","getRandomColor","color","Math","floor","random","AddProject","title","date","dev","useState","techno","setTechno","options","AllProject","projects","project","ShowProject","setUser","_getUser","developper_id","_deleteProject","style","backgroundColor","techo","projectId","_createProject","Date","getTime","devId","timestamp","_formateForAPI","created_date","_getProjects","Project","asEditedPOroject","setRoute","loaded","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e12fe2b8.chunk.js","sourcesContent":["import './home.css'\n\nexport const Home = () => (\n  <div className='jumbotron home'>\n    <h1 className='display-4'>RAISIN Mathieu</h1>\n\n    <p className='lead'>\n      Développement d'une application fullstack. Petit\n      projet réaliser dans le cursus de formation\n      \"Concepteur développeur web\" de chez 2ItechAcademy\n    </p>\n    <hr className='my-4' />\n    <p>\n      Backend - Node.js avec Typescript\n      <br />\n      Base de donner - NOSQL avec MongoDB\n      <br />\n      Frontend - React.js avec JSX\n    </p>\n    <p className='lead'>\n      <a\n        className='btn btn-primary btn-lg'\n        role='button'\n        href={\n          'https://github.com/MathieuRA/-Fullstack-app-2ITECH'\n        }\n        target={'_blank'}\n      >\n        Liens GITHUB\n      </a>\n    </p>\n  </div>\n)\n","import React from 'react'\n\nimport { map, isEqual } from 'lodash'\n\nexport default class EditModal extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isEditing: false,\n      user: {\n        id: this.props.id,\n      },\n    }\n  }\n\n  componentDidMount = () => {\n    this.setState((prevState) => ({\n      user: {\n        ...this.props.contents,\n        ...prevState.user,\n      },\n    }))\n  }\n\n  componentDidUpdate = (prevState) => {\n    if (isEqual(prevState, this.state)) {\n      return\n    }\n  }\n  toogleEditing = () => {\n    this.setState((prevState) => ({\n      isEditing: !prevState.isEditing,\n    }))\n  }\n\n  _editField = (e, key) => {\n    switch (key) {\n      case 'firstname':\n        this.setState((prevState) => ({\n          user: {\n            ...prevState.user,\n            firstname: e.target.value,\n          },\n        }))\n        break\n      case 'lastname':\n        this.setState((prevState) => ({\n          user: {\n            ...prevState.user,\n            firstname: e.target.value,\n          },\n        }))\n        break\n      case 'job':\n        this.setState((prevState) => ({\n          user: {\n            ...prevState.user,\n            firstname: e.target.value,\n          },\n        }))\n        break\n      default:\n        break\n    }\n  }\n\n  render() {\n    const {\n      contents,\n      handleEdit,\n      hasEditedUser,\n    } = this.props\n\n    let i = 0\n\n    const reformateContent = {\n      firstname: contents.firstname,\n      lastname: contents.lastname,\n      job: contents.job,\n    }\n\n    return (\n      <div\n        className='card-body'\n        onDoubleClick={this.toogleEditing}\n      >\n        {map(reformateContent, (content) => {\n          const key = Object.keys(reformateContent)[i]\n          if (\n            // hide useless change without delete them of the object\n            key === '__v' ||\n            key === '_id'\n          ) {\n            i++\n            return\n          }\n          i++\n\n          return (\n            <>\n              <FormField\n                key={i}\n                content={content}\n                isEditing={this.state.isEditing}\n                onChange={(e) => this._editField(e, key)}\n                label={key}\n              />\n            </>\n          )\n        })}\n        <br />\n        <small>\n          Double clique pour{' '}\n          {this.state.isEditing ? (\n            <span>annuler</span>\n          ) : (\n            <span>modifier</span>\n          )}\n        </small>\n        <br />\n        {this.state.isEditing && (\n          <button\n            onClick={() =>\n              handleEdit(\n                this.state,\n                hasEditedUser,\n                this.toogleEditing\n              )\n            }\n            className='btn btn-outline-info'\n          >\n            Modifier\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n\nconst FormField = ({\n  content,\n  isEditing,\n  onChange,\n  label,\n}) => {\n  const $class =\n    label === 'firstname'\n      ? 'title'\n      : label === 'lastname'\n      ? 'text mb-2'\n      : 'subtitle text-muted'\n  return isEditing ? (\n    <input\n      className={`card-${$class}`}\n      placeholder={content}\n      onChange={onChange}\n    />\n  ) : (\n    <p className={`card-${$class}`}> {content}</p>\n  )\n}\n","export default Notification = ({ children, $class }) => {\n  return <p className={'alert ' + $class}>{children}</p>\n}\n","import React from 'react'\n\nimport { map, isEmpty } from 'lodash'\nimport { useRef } from 'react'\n\nimport EditModal from '../../utils/editModal'\nimport Notification from '../../utils/notification'\n\nimport './user.css'\n\nconst AddUser = ({ setError, setSuccess }) => {\n  const firstname = useRef()\n  const lastname = useRef()\n  const job = useRef()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    try {\n      await fetch('http://localhost:3000/user', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(\n          _handleSubmit(firstname, job, lastname)\n        ),\n      })\n\n      firstname.current.value = ''\n      job.current.value = ''\n      lastname.current.value = ''\n      setSuccess('Utilisateur à bien été ajouter')\n    } catch (err) {\n      setError(\"L'ajout de l'utilisateur à échouer \")\n    }\n  }\n\n  return (\n    <div className='containerUser'>\n      <form onSubmit={handleSubmit}>\n        <div className='form-row'>\n          <div className='col'>\n            <label>\n              Nom:\n              <input\n                id='firstname'\n                name='firstname'\n                ref={firstname}\n                type='text'\n                className='form-control'\n              />\n            </label>\n          </div>\n          <div className='col'>\n            <label>\n              Prénom:\n              <input\n                id='lastname'\n                name='lastname'\n                ref={lastname}\n                type='text'\n                className='form-control'\n              />\n            </label>\n          </div>\n        </div>\n        <div className='form-row'>\n          <div className='col'>\n            <label>\n              Métier:\n              <input\n                id='job'\n                name='job'\n                ref={job}\n                type='text'\n                className='form-control'\n              />\n            </label>\n          </div>\n          <div className='col'>\n            <input\n              type='submit'\n              value='Envoyer'\n              className='btn btn-outline-primary'\n            />\n          </div>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst AllUsers = ({\n  hasEditedUser,\n  setError,\n  setSuccess,\n  users,\n}) =>\n  isEmpty(users) ? (\n    <p>Aucun utilisateur</p>\n  ) : (\n    map(users, (user) => (\n      <div className='card mb-3' key={user._id}>\n        <button\n          onClick={() =>\n            _deleteUser(\n              hasEditedUser,\n              setError,\n              setSuccess,\n              user._id\n            )\n          }\n          aria-label='Close'\n          className='close'\n          type='button'\n        >\n          <span aria-hidden='true'>&times;</span>\n        </button>\n        <EditModal\n          contents={user}\n          handleEdit={_editUser}\n          hasEditedUser={hasEditedUser}\n          id={user._id}\n        />\n      </div>\n    ))\n  )\n\nconst _deleteUser = async (\n  refresh,\n  error,\n  success,\n  userId\n) => {\n  const response = await fetch(\n    `http://localhost:3000/user/${userId}`,\n    {\n      method: 'DELETE',\n    }\n  )\n  if (response.status === 200) {\n    success('Utilisateur supprimer')\n    refresh()\n  } else {\n    error('Erreur lors de la suppression')\n    refresh()\n  }\n}\n\nconst _editUser = async (\n  { user },\n  callback,\n  closeEditModal\n) => {\n  const response = await fetch(\n    `http://localhost:3000/user/${user.id}`,\n    {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(user),\n    }\n  )\n  await response.json()\n  closeEditModal()\n  callback()\n}\nconst _getUsers = async () => {\n  const response = await fetch(\n    'http://localhost:3000/users'\n  )\n  const users = await response.json()\n  return users\n}\n\nconst _handleSubmit = (firstname, job, lastname) => {\n  return {\n    firstname: firstname.current.value,\n    job: job.current.value,\n    lastname: lastname.current.value,\n  }\n}\n\nexport class User extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: '',\n      route: 'get',\n      success: '',\n      usersLoaded: false,\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({ users: await _getUsers() }, () => {\n      this.setState({ usersLoaded: true })\n    })\n  }\n\n  componentDidUpdate() {\n    this.hasEditedUser()\n  }\n\n  hasEditedUser = async () => {\n    this.setState({ users: await _getUsers() })\n  }\n\n  setError = (error) => this.setState({ error })\n\n  setSuccess = (success) => this.setState({ success })\n\n  _setRoute = (route) => {\n    console.log(route)\n    this.setState({ route })\n  }\n\n  render() {\n    const {\n      error,\n      success,\n      route,\n      usersLoaded,\n      users,\n    } = this.state\n    return (\n      <>\n        {error && (\n          <Notification $class={'alert-danger'}>\n            {error}\n          </Notification>\n        )}\n        {success && (\n          <Notification $class={'alert-success'}>\n            {success}\n          </Notification>\n        )}\n        <div>\n          {route === 'get' ? (\n            <button\n              className='btn alert-info userButton'\n              onClick={() => this._setRoute('post')}\n            >\n              Ajouter un utilisateur\n            </button>\n          ) : (\n            <button\n              className='btn alert-info userButton'\n              onClick={() => this._setRoute('get')}\n            >\n              Tout les utilisateurs\n            </button>\n          )}\n        </div>\n\n        {route === 'get' && (\n          <div className='containerFlex'>\n            {!usersLoaded ? (\n              <p>Chargement des utilisateurs ...</p>\n            ) : (\n              <AllUsers\n                hasEditedUser={this.hasEditedUser}\n                setError={this.setError}\n                setSuccess={this.setSuccess}\n                users={users}\n              />\n            )}\n          </div>\n        )}\n        {route === 'post' && (\n          <AddUser\n            setError={this.setError}\n            setSuccess={this.setSuccess}\n          />\n        )}\n      </>\n    )\n  }\n}\n","export const getRandomColor = () => {\n  const letters = '0123456789ABCDEF'\n  let color = '#'\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n  return color\n}\n","import React, { useRef, useState } from 'react'\n\nimport MultiSelect from 'react-multi-select-component'\n\nimport { map, isEmpty } from 'lodash'\n\nimport Notification from '../../utils/notification'\n\nimport './projects.css'\nimport { getRandomColor } from '../../utils/tools'\n\nconst AddProject = ({ users, error, success, refresh }) => {\n  const options = [\n    { value: 'css', label: 'CSS' },\n    { value: 'html', label: 'HTML' },\n    { value: 'javascript', label: 'Javascript' },\n    { value: 'node', label: 'Node.js' },\n    { value: 'php', label: 'PHP' },\n    { value: 'react', label: 'React.js' },\n    { value: 'symphony', label: 'Symphony' },\n    { value: 'typscript', label: 'Typescript' },\n    { value: 'wordpress', label: 'Wordpress' },\n  ]\n\n  const title = useRef()\n  const date = useRef()\n  const dev = useRef()\n\n  const [techno, setTechno] = useState()\n\n  return (\n    <div className='formProject pt-4'>\n      <form\n        onSubmit={(e) =>\n          _handleSubmit(\n            e,\n            title.current.value,\n            techno,\n            dev.current.value,\n            date.current.value,\n            error,\n            success,\n            refresh\n          )\n        }\n      >\n        <div>\n          <div className='form-row'>\n            <div className='col'>\n              <label>\n                Titre:\n                <input\n                  id='title'\n                  name='title'\n                  ref={title}\n                  type='text'\n                  className='form-control'\n                />\n              </label>\n            </div>\n            <div className='col'>\n              <label>\n                Technologie:\n                <MultiSelect\n                  options={options}\n                  onChange={setTechno}\n                  value={techno}\n                />\n              </label>\n            </div>\n            <div className='col'>\n              <label>\n                Le développeur\n                <div>\n                  <select ref={dev}>\n                    {map(users, (user) => {\n                      return (\n                        <option\n                          key={user._id}\n                          value={user._id}\n                        >\n                          {user.firstname}\n                        </option>\n                      )\n                    })}\n                  </select>\n                </div>\n              </label>\n            </div>\n          </div>\n\n          <div className='form-row'>\n            <div className='col'>\n              <label>\n                <input\n                  type='date'\n                  name='created_date'\n                  id='created_date'\n                  ref={date}\n                />\n              </label>\n            </div>\n          </div>\n        </div>\n        <button\n          type='submit'\n          className='btn btn-outline-primary'\n        >\n          Envoyer\n        </button>\n      </form>\n    </div>\n  )\n}\n\nconst AllProject = ({\n  projects,\n  error,\n  success,\n  refresh,\n}) =>\n  !isEmpty(projects) ? (\n    <div className='projectsContainer mt-3'>\n      {map(projects, (project) => (\n        <ShowProject\n          key={project._id}\n          project={project}\n          error={error}\n          success={success}\n          refresh={refresh}\n        />\n      ))}\n    </div>\n  ) : (\n    <p>Aucun projet</p>\n  )\n\nconst ShowProject = ({\n  project,\n  error,\n  success,\n  refresh,\n}) => {\n  const [user, setUser] = useState()\n  _getUser(project.developper_id, setUser)\n  return (\n    <>\n      <div className='card project mb-3'>\n        <button\n          onClick={() =>\n            _deleteProject(\n              project._id,\n              success,\n              error,\n              refresh\n            )\n          }\n          aria-label='Close'\n          className='close'\n          type='button'\n        >\n          <span aria-hidden='true'>&times;</span>\n        </button>\n        <div\n          className='card-img-top'\n          style={{ backgroundColor: getRandomColor() }}\n        ></div>\n        <div className='card-body'>\n          <h5 className='card-title'>{project.title}</h5>\n          {user && (\n            <div>\n              <p className='card-text'>\n                Développeur: {user}\n              </p>\n            </div>\n          )}\n        </div>\n        <ul className='list-group list-grou-flush'>\n          {map(project.techno, (techo) => (\n            <li\n              className='list-group-item'\n              key={techo.value}\n              style={{ color: getRandomColor() }}\n            >\n              {techo.label}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  )\n}\n\nconst _deleteProject = async (\n  projectId,\n  success,\n  error,\n  refresh\n) => {\n  const response = await fetch(\n    `http://localhost:3000/project/${projectId}`,\n    {\n      method: 'DELETE',\n    }\n  )\n  if (response.status === 200) {\n    success('Suppression effectuer')\n    refresh()\n  } else {\n    error('Erreur lors de la suppresion')\n    refresh()\n  }\n}\n\nconst _handleSubmit = (\n  e,\n  title,\n  techno,\n  dev,\n  date,\n  error,\n  success,\n  refresh\n) => {\n  e.preventDefault()\n  _createProject(\n    title,\n    techno,\n    dev,\n    new Date(date).getTime(),\n    error,\n    success,\n    refresh\n  )\n}\n\nconst _createProject = async (\n  title,\n  techno,\n  devId,\n  timestamp,\n  error,\n  success,\n  refresh\n) => {\n  const response = await fetch(\n    'http://localhost:3000/project',\n    {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(\n        _formateForAPI(title, techno, devId, timestamp)\n      ),\n    }\n  )\n  if (response.status === 201) {\n    success('Projet ajouter avec success')\n    refresh()\n  } else {\n    error(\"Erreur lors de l'ajoute du projet\")\n    refresh()\n  }\n}\n\nconst _formateForAPI = (\n  title,\n  techno,\n  devId,\n  timestamp\n) => {\n  return {\n    title,\n    techno,\n    developper_id: devId,\n    created_date: timestamp,\n  }\n}\n\nconst _getUsers = async () => {\n  const response = await fetch(\n    'http://localhost:3000/users'\n  )\n  const users = await response.json()\n  return users\n}\n\nconst _getUser = async (userId, callback) => {\n  const response = await fetch(\n    `http://localhost:3000/user/${userId}`\n  )\n  const user = await response.json()\n  callback(user.firstname)\n  return user.firstname\n}\n\nconst _getProjects = async () => {\n  const response = await fetch(\n    'http://localhost:3000/projects'\n  )\n\n  const projects = await response.json()\n  return projects\n}\n\nexport default class Project extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      error: '',\n      loaded: false,\n      route: 'get',\n      success: '',\n    }\n  }\n\n  async componentDidMount() {\n    this.setState(\n      {\n        users: await _getUsers(),\n        projects: await _getProjects(),\n      },\n      () => this.setState({ loaded: true })\n    )\n  }\n\n  asEditedPOroject = async () =>\n    this.setState({ projects: await _getProjects() })\n\n  setRoute = (route) => this.setState({ route })\n\n  setError = (error) => this.setState({ error })\n\n  setSuccess = (success) => this.setState({ success })\n\n  render() {\n    const {\n      route,\n      users,\n      error,\n      success,\n      loaded,\n      projects,\n    } = this.state\n\n    return (\n      <>\n        {error && (\n          <Notification $class={'alert-error'}>\n            {error}\n          </Notification>\n        )}\n        {success && (\n          <Notification $class={'alert-success'}>\n            {success}\n          </Notification>\n        )}\n        {route === 'get' ? (\n          <button\n            className='btn alert-info userButton'\n            onClick={() => this.setRoute('post')}\n          >\n            Ajouter un projet\n          </button>\n        ) : (\n          <button\n            className='btn alert-info userButton'\n            onClick={() => this.setRoute('get')}\n          >\n            Voir tout les projets\n          </button>\n        )}\n\n        {route === 'get' &&\n          (loaded ? (\n            <AllProject\n              projects={projects}\n              error={this.setError}\n              success={this.setSuccess}\n              refresh={this.asEditedPOroject}\n            />\n          ) : (\n            <p>Chargement ...</p>\n          ))}\n\n        {route === 'post' && (\n          <AddProject\n            users={users}\n            error={this.setError}\n            success={this.setSuccess}\n            refresh={this.asEditedPOroject}\n          />\n        )}\n      </>\n    )\n  }\n}\n","import { Home } from './component/home'\nimport { useState } from 'react'\nimport { User } from './component/users/user'\nimport Project from './component/projects/project'\n\nimport './App.css'\n\nfunction App() {\n  const [route, setRoute] = useState('home')\n  return (\n    <>\n      <div>\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n          <a\n            className='navbar-brand'\n            onClick={() => setRoute('home')}\n          >\n            Fullstack Typescript / JSX\n          </a>\n          <div\n            className='collapse navbar-collapse'\n            id='navbarNav'\n          >\n            <ul className='navbar-nav'>\n              <li className='nav-item active'>\n                <a\n                  className='nav-link'\n                  onClick={() => setRoute('home')}\n                >\n                  Accueil{' '}\n                  <span className='sr-only'>(current)</span>\n                </a>\n              </li>\n              <li className='nav-item'>\n                <a\n                  className='nav-link'\n                  onClick={() => setRoute('users')}\n                >\n                  Utilisateurs\n                </a>\n              </li>\n              <li className='nav-item'>\n                <a\n                  className='nav-link'\n                  onClick={() => setRoute('projects')}\n                >\n                  Projets\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n      <div>\n        <section className='mainSection'>\n          {route === 'home' && <Home />}\n          {route === 'users' && <User />}\n          {route === 'projects' && <Project />}\n        </section>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}